// Test file to verify direct upload implementation
// This can be run in browser console to test upload functionality

async function testDirectUpload() {
  console.log("üöÄ Testing direct upload implementation...");

  // Check if supabaseAdmin is available
  if (typeof window !== "undefined") {
    console.log("‚úÖ Running in browser environment");

    // Check environment variables
    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const serviceRoleKey = process.env.NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY;

    console.log("üîó Supabase URL:", supabaseUrl ? "‚úÖ Set" : "‚ùå Missing");
    console.log(
      "üîë Service Role Key:",
      serviceRoleKey ? "‚úÖ Set" : "‚ùå Missing"
    );

    if (!supabaseUrl || !serviceRoleKey) {
      console.error("‚ùå Missing required environment variables");
      return;
    }

    // Test admin auth
    const adminPassword =
      localStorage.getItem("adminPassword") ||
      process.env.NEXT_PUBLIC_ADMIN_PASSWORD ||
      "admin123";
    console.log(
      "üîê Admin auth:",
      adminPassword ? "‚úÖ Available" : "‚ùå Missing"
    );

    console.log("‚úÖ All checks passed! Ready to test uploads.");
    console.log("üìù To test:");
    console.log("1. Go to admin panel");
    console.log("2. Try uploading a large image (>6MB)");
    console.log("3. Check browser console for any errors");
    console.log("4. Verify image appears correctly");
  } else {
    console.log("‚ùå Not in browser environment");
  }
}

// Auto-run if in browser
if (typeof window !== "undefined") {
  testDirectUpload();
}

export default testDirectUpload;
